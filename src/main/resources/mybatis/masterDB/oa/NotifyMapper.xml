<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.oa.dao.NotifyDao">
	<sql id="Base_Column_List">
		id,type,title,content,files,file_mc,status,create_by,create_date,update_by,update_date,remarks,del_flag
	</sql>
	<resultMap id="BaseResultMap" type="com.bootdo.oa.domain.NotifyDO">
		<result column="id" property="id"></result>
		<result column="type" property="type"></result>
		<result column="title" property="title"></result>
		<result column="content" property="content"></result>
		<result column="files" property="files"></result>
		<result column="file_mc" property="fileMc"></result>
		<result column="status" property="status"></result>
		<result column="create_by" property="createBy"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_by" property="updateBy"></result>
		<result column="update_date" property="updateDate"></result>
		<result column="remarks" property="remarks"></result>
		<result column="del_flag" property="delFlag"></result>
	</resultMap>

	<select id="get" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from oa_notify where id = #{value}
	</select>

	<select id="list" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from oa_notify
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="type != null and type != ''"> and type = #{type} </if>
			<if test="title != null and title != ''"> and title like concat('%',#{title},'%')  </if>
			<if test="content != null and content != ''"> and content = #{content} </if>
			<if test="files != null and files != ''"> and files = #{files} </if>
			<if test="fileMc != null and fileMc != ''"> and file_mc = #{fileMc} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
			<if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
			<if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
			<if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
			<if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from oa_notify
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="type != null and type != ''"> and type = #{type} </if>
			<if test="title != null and title != ''"> and title = #{title} </if>
			<if test="content != null and content != ''"> and content = #{content} </if>
			<if test="files != null and files != ''"> and files = #{files} </if>
			<if test="fileMc != null and fileMc != ''"> and file_mc = #{fileMc} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
			<if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
			<if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
			<if test="remarks != null and remarks != ''"> and remarks = #{remarks} </if>
			<if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.oa.domain.NotifyDO"
		useGeneratedKeys="true" keyProperty="id">
		insert into oa_notify
		(
		`type`,
		`title`,
		`content`,
		`files`,
		`file_mc`,
		`status`,
		`create_by`,
		`create_date`,
		`update_by`,
		`update_date`,
		`remarks`,
		`del_flag`
		)
		values
		(
		#{type},
		#{title},
		#{content},
		#{files},
		#{fileMc},
		#{status},
		#{createBy},
		#{createDate},
		#{updateBy},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.oa.domain.NotifyDO">
		update oa_notify
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="title != null">`title` = #{title}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="files != null">`files` = #{files}, </if>
			<if test="fileMc != null">`file_mc` = #{fileMc} </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="remove">
		delete from oa_notify where id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from oa_notify where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<select id="listByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from oa_notify where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</select>


	<select id="countDTO" resultType="int">
		select count(*)
		from
		oa_notify_record r right JOIN oa_notify n on
		r.notify_id
		= n.id
		<where>
			<if test="id != null and id != ''"> and r.id = #{id} </if>
			<if test="notifyId != null and notifyId != ''"> and r.notify_id = #{notifyId} </if>
			<if test="isRead != null and isRead != ''"> and r.is_read = #{isRead} </if>
			<if test="userId != null and userId != ''"> and r.user_id = #{userId} </if>
			<if test="readDate != null and readDate != ''"> and r.read_date = #{readDate} </if>
		</where>
	</select>

	<sql id="DTO_Column_List">
	  n.id,type,title,content,files,r.is_read,status,create_by,create_date,update_by,update_date,remarks,del_flag
	</sql>
	<resultMap id="DTOResultMap" type="com.bootdo.oa.domain.NotifyDTO">
		<result column="id" property="id"></result>
		<result column="type" property="type"></result>
		<result column="title" property="title"></result>
		<result column="content" property="content"></result>
		<result column="files" property="files"></result>
		<result column="is_read" property="isRead"></result>
		<result column="status" property="status"></result>
		<result column="create_by" property="createBy"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_by" property="updateBy"></result>
		<result column="update_date" property="updateDate"></result>
		<result column="remarks" property="remarks"></result>
		<result column="del_flag" property="delFlag"></result>
	</resultMap>
	<select id="listDTO" resultMap="DTOResultMap">
		select DISTINCT
		<include refid="DTO_Column_List" />
		from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id
		<where>
			<if test="title != null and title != ''"> and n.title like concat("%",#{title},"%")  </if>
			<if test="id != null and id != ''"> and r.id = #{id} </if>
			<if test="notifyId != null and notifyId != ''"> and r.notify_id = #{notifyId} </if>
			<if test="isRead != null and isRead != ''"> and r.is_read = #{isRead} </if>
			<if test="userId != null and userId != ''"> and r.user_id = #{userId} </if>
			<if test="readDate != null and readDate != ''"> and r.read_date = #{readDate} </if>
		</where>
		<!-- order by is_read ASC, update_date DESC -->
		order by update_date DESC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>

	</select>

</mapper>